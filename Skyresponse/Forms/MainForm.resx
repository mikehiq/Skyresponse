<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HQAbHR0AGx0dYRsdHTgbHR0FGx0dbhsdHSYbHR0AGx0dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAGx0dABsdHQAbHR0AGx0dEhsdHQgbHR0AGx0dABsdHQAbHR0hGx0dcBsdHQcbHR0AGx0dKxsd
        HXAbHR0HGx0dABsdHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsdHQAbHR0AGx0dABsd
        HQAbHR0AGx0dABsdHQUbHR1uGx0dLxsdHQAbHR0AGx0dABsdHVAbHR1cGx0dAhsdHQAbHR0AGx0dAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsdHQAbHR0AGx0dARsdHVkbHR1VGx0dABsd
        HQAbHR0AGx0dABsdHQQbHR1eGx0dXBsdHQcbHR0AGx0dABsdHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAbHR0AGx0dABsdHQAbHR0FGx0dWRsdHWIbHR0FGx0dABsdHQAAAAAAGx0dABsdHQAbHR0EGx0dUhsd
        HW8bHR0kGx0dABsdHQAbHR0AGx0dABsdHQAbHR0AGx0dABsdHQAbHR0AGx0dABsdHSEbHR1uGx0dVRsd
        HQUbHR0AGx0dAAAAAAAAAAAAAAAAABsdHQAbHR0AGx0dABsdHS0bHR1vGx0dYhsdHTEbHR0RGx0dBBsd
        HQAbHR0AGx0dBBsdHRAbHR0vGx0dYRsdHXEbHR0vGx0dABsdHQAbHR0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAbHR0AGx0dABsdHQAbHR0GGx0dNhsdHWwbHR2AGx0dfhsdHXYbHR12Gx0dfhsdHYAbHR1tGx0dOBsd
        HQcbHR0AGx0dABsdHQAAAAAAAAAAAAAAAADgAAcAwAADAIAAAQAAfgAAAf+AAAP8AAAH+AAAAHAQAAAA
        EAAAABgAEAAYABAAGAAQABgAEAAYAAAAGAAAABAAAHAQAAf4AAAD/AAAAP+AAAB+AACAAAEAwAADAOAA
        BwA=
</value>
  </data>
</root>